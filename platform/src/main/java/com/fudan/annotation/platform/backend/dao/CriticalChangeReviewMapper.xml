<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fudan.annotation.platform.backend.dao.CriticalChangeReviewMapper">

    <resultMap id="critical_change_review" type="com.fudan.annotation.platform.backend.entity.CriticalChangeDD">
        <result column="critical_change_id" property="criticalChangeId" jdbcType="INTEGER"/>
        <result column="regression_uuid" property="regressionUuid" jdbcType="VARCHAR"/>
        <result column="revision_name" property="revisionName" jdbcType="VARCHAR"/>
        <result column="new_path" property="newPath" jdbcType="VARCHAR"/>
        <result column="old_path" property="oldPath" jdbcType="VARCHAR"/>
        <result column="beginA" property="beginA" jdbcType="INTEGER"/>
        <result column="beginB" property="beginB" jdbcType="INTEGER"/>
        <result column="endA" property="endA" jdbcType="INTEGER"/>
        <result column="endB" property="endB" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="tool" property="tool" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="setCriticalChangeReview" >
        insert into critical_change_review
        (critical_change_id, regression_uuid, revision_name, new_path, old_path, beginA, beginB, endA, endB, type, tool)
        values (#{criticalChangeId},
                #{regressionUuid},
                #{revisionName},
                #{newPath},
                #{oldPath},
                #{beginA},
                #{beginB},
                #{endA},
                #{endB},
                #{type},
                #{tool});
    </insert>

    <select id="getCriticalChangeReview" resultMap="critical_change_review">
        select critical_change_id,new_path,old_path,beginA,beginB,endA,endB,type,tool from critical_change_review
        <where>
            regression_uuid = #{regressionUuid} and revision_name = #{revisionName}
        </where>
    </select>

    <delete id="deleteCriticalChangeReview" >
        delete from critical_change
        <where>
            regression_uuid = #{regressionUuid} and revision_name = #{revisionName}
            and critical_change_id = #{criticalChangeId}
        </where>
    </delete>

</mapper>